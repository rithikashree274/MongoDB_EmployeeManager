 from pymongo import MongoClient
client = MongoClient('localhost', 27017)
db = client['employee_database']
# a) createCollection
def createCollection(p_collection_name):
    if p_collection_name not in db.list_collection_names():
        db.create_collection(p_collection_name)
        print(f"Collection '{p_collection_name}' created.")
    else:
        print(f"Collection '{p_collection_name}' already exists.")
# b) indexData
def indexData(p_collection_name, p_exclude_column):
    collection = db[p_collection_name]
    employee_data = [
        {"EmpID": "E02001", "Name": "John", "Department": "HR", "Gender": "Male"},
        {"EmpID": "E02002", "Name": "Jane", "Department": "Finance", "Gender": "Female"},
        {"EmpID": "E02003", "Name": "Doe", "Department": "IT", "Gender": "Male"}

    ]
    for emp in employee_data:
        emp.pop(p_exclude_column, None)  
        collection.insert_one(emp)
    print(f"Data indexed in '{p_collection_name}' excluding '{p_exclude_column}'.")

# c) searchByColumn
def searchByColumn(p_collection_name, p_column_name, p_column_value):
    collection = db[p_collection_name]
    results = collection.find({p_column_name: p_column_value})
    print(f"Results for {p_column_name} = {p_column_value} in {p_collection_name}:")
    for result in results:
        print(result)

# d) getEmpCount
def getEmpCount(p_collection_name):
    collection = db[p_collection_name]
    count = collection.count_documents({})
    print(f"Employee count in '{p_collection_name}': {count}")
    return count

# e) delEmpById
def delEmpById(p_collection_name, p_employee_id):
    collection = db[p_collection_name]
    result = collection.delete_one({"EmpID": p_employee_id})
    if result.deleted_count > 0:
        print(f"Employee with ID '{p_employee_id}' deleted from '{p_collection_name}'.")
    else:
        print(f"No employee found with ID '{p_employee_id}'.")

# f) getDepFacet
def getDepFacet(p_collection_name):
    collection = db[p_collection_name]
    pipeline = [
        {"$group": {"_id": "$Department", "count": {"$sum": 1}}}
    ]
    results = collection.aggregate(pipeline)
    print(f"Employee count by department in '{p_collection_name}':")
    for result in results:
        print(result)
if __name__ == "__main__":
    v_nameCollection = 'Hash_Rithika'
    v_phoneCollection = 'Hash_4263'

    createCollection(v_nameCollection)
    createCollection(v_phoneCollection)
    getEmpCount(v_nameCollection)
    indexData(v_nameCollection, 'Department')
    indexData(v_phoneCollection, 'Gender')
    getEmpCount(v_nameCollection)
    delEmpById(v_nameCollection, 'E02003')
    getEmpCount(v_nameCollection)
    searchByColumn(v_nameCollection, 'Department', 'IT')
    searchByColumn(v_nameCollection, 'Gender', 'Male')
    searchByColumn(v_phoneCollection, 'Department', 'IT')
    getDepFacet(v_nameCollection)
    getDepFacet(v_phoneCollection)
